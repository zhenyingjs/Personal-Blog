{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{410:function(t,a,s){\"use strict\";s.r(a);var n=s(8),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[a(\"h1\",{attrs:{id:\"js入门【1】\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#js入门【1】\"}},[t._v(\"#\")]),t._v(\" JS入门【1】\")]),t._v(\" \"),a(\"p\",[t._v(\"大家好，今天我们开始学习JS的基础知识，都说Css是页面最美的化妆品，那么它的写法是怎么样的，又是怎么美化Css的，就让我们来了解一下\")]),t._v(\" \"),a(\"h2\",{attrs:{id:\"\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#\"}},[t._v(\"#\")])]),t._v(\" \"),a(\"p\",[t._v(\"CSS 可以用于给文档添加样式 —— 比如改变标题和链接的颜色及大小。它也可用于创建布局 —— 比如将一个单列文本变成包含主要内容区域和存放相关信息的侧边栏区域的布局。它甚至还可以用来做一些特效，比如动画。\")]),t._v(\" \"),a(\"blockquote\",[a(\"p\",[t._v(\"下面我将讲述一点简单的案例\")])]),t._v(\" \"),a(\"p\",[t._v(\"CSS 是一门基于规则的语言 —— 你能定义用于你的网页中特定元素样式的一组规则。比如“我希望页面中的主标题是红色的大字”\")]),t._v(\" \"),a(\"p\",[t._v(\"下面这段代码使用非常简单的 CSS 规则实现了之前提到的效果：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-dart extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-dart\"}},[a(\"code\",[t._v(\"    h1 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    color\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" red\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    font\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"size\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"12\")]),t._v(\"px\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"/img.png\",alt:\"required\"}})]),t._v(\" \"),a(\"p\",[t._v(\"如果想要更改颜色，只需要修改color就可以了，font-size则是字体大小：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-dart extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-dart\"}},[a(\"code\",[t._v(\"  h1 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    color\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" black\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    font\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"size\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"16\")]),t._v(\"px\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"/img_1.png\",alt:\"required\"}})]),t._v(\" \"),a(\"h2\",{attrs:{id:\"同时设置多个元素\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#同时设置多个元素\"}},[t._v(\"#\")]),t._v(\" 同时设置多个元素\")]),t._v(\" \"),a(\"p\",[t._v(\"我们在写页面时当然不可能只有1个元素，所以我们可以给多个元素设置不同的样式\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-dart extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-dart\"}},[a(\"code\",[t._v(\" h1 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    color\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" red\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    font\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"size\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"24\")]),t._v(\"px\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\\n p \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    color\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" black\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    font\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"size\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"14\")]),t._v(\"px\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[a(\"img\",{attrs:{src:\"/img_2.png\",alt:\"required\"}})]),t._v(\" \"),a(\"h3\",{attrs:{id:\"用逗号将不同选择器隔开\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#用逗号将不同选择器隔开\"}},[t._v(\"#\")]),t._v(\" 用逗号将不同选择器隔开\")]),t._v(\" \"),a(\"p\",[t._v(\"上面选择2个要写2行，如果有很多个标签要选择哪会非常麻烦，所以我们可以用用逗号将不同选择器隔开\\n，这样就是同时选择4个标签设置样式\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-dart extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-dart\"}},[a(\"code\",[t._v(\" h1，p，a\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\",\")]),t._v(\"h2 \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n    color\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" red\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n    font\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"size\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" \"),a(\"span\",{pre:!0,attrs:{class:\"token number\"}},[t._v(\"24\")]),t._v(\"px\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"浏览器默认样式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#浏览器默认样式\"}},[t._v(\"#\")]),t._v(\" 浏览器默认样式\")]),t._v(\" \"),a(\"p\",[t._v(\"即使像我们的例子那么简单，浏览器都会尽全力将其渲染至可读状态。标题默认使用大号粗体；列表旁总有项目符号。这是因为浏览器自带一个包含默认样式的样式表，默认对任何页面有效。没有了它们，所有文本会夹杂在一起变得一团糟，我们只得从头开始规定，好糟糕。话说回来，所有现代浏览器的默认样式都没什么差距。\")]),t._v(\" \"),a(\"p\",[t._v(\"不过你可能对浏览器的默认样式不太满意。没关系，只需选定那个元素，加一条 CSS 规则即可。\\n就拿我们的无序列表 ul 举个例子吧，它自带项目符号，不过要是你跟它有仇，你就可以这样移除它们：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-dart extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-dart\"}},[a(\"code\",[t._v(\"li \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  list\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"style\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"type\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" none\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"h3\",{attrs:{id:\"使用类名\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用类名\"}},[t._v(\"#\")]),t._v(\" 使用类名\")]),t._v(\" \"),a(\"p\",[t._v(\"目前为止，我们通过 HTML 元素名规定样式。如果你愿意所有元素都一个样，也不是不可以，但大多数情况下，我估计你都不愿意\\n，所以你可以给 HTML 元素加个类名（class），再选中那个类名，这样就可以了，大家基本上都这么用。\")]),t._v(\" \"),a(\"p\",[t._v(\"举个例子吧，咱们把 class 属性加到表里面第二个对象。你的列表看起来应该是这样的：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-dart extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-dart\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),t._v(\"ul\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),t._v(\"li\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"项目一\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"li\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"li \"),a(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[t._v(\"class\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"=\")]),a(\"span\",{pre:!0,attrs:{class:\"token string-literal\"}},[a(\"span\",{pre:!0,attrs:{class:\"token string\"}},[t._v('\"spile\"')])]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"项目二\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"li\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n  \"),a(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),t._v(\"li\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"项目 \"),a(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"<\")]),t._v(\"em\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\">\")])]),t._v(\"三\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"em\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"li\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"/\")]),t._v(\"ul\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"在 CSS 中，要选中这个 spill 类，只需在选择器的开头加个西文句点（.）。在你的 CSS 文档里加上如下代码：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-dart extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-dart\"}},[a(\"code\",[a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"spill \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  color\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" orange\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  font\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"weight\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" bold\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"保存再刷新，就可以看到变化。\")]),t._v(\" \"),a(\"p\",[t._v(\"这个 spill 类型可不局限于列表，它可以应用到各种元素上,举个例子，你可能也想让段落里边的 span 一起又橙又粗起来。试试把spill类属性加上去，保存，刷新，哇，生活就是这么美好。\\n有时你会发现选择器中，HTML 元素选择器跟类一起出现.\")]),t._v(\" \"),a(\"div\",{staticClass:\"language-dart extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-dart\"}},[a(\"code\",[t._v(\"li\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\".\")]),t._v(\"spill \"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"{\")]),t._v(\"\\n  color\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" orange\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\"\\n  font\"),a(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"-\")]),t._v(\"weight\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\":\")]),t._v(\" bold\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\";\")]),t._v(\" \\n\"),a(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"}\")]),t._v(\"\\n\")])])]),a(\"p\",[t._v(\"这个意思是说，“选中每个 spill 类的 li 元素”。你真要这样，好了，它对 span 还有其他元素不起作用了。你可以把这个元素再添上去就是了：\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"li.special,\\nspan.special {\\n  color: orange;\\n  font-weight: bold;\\n}\\n\")])])]),a(\"h3\",{attrs:{id:\"根据元素的位置确定样式\"}},[a(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#根据元素的位置确定样式\"}},[t._v(\"#\")]),t._v(\" 根据元素的位置确定样式\")]),t._v(\" \"),a(\"p\",[t._v(\"有时候，你希望某些内容根据它在文档中的位置而有所不同，这里有很多选择器可以为你提供帮助，但现在我们只介绍几个选择器\")]),t._v(\" \"),a(\"div\",{staticClass:\"language- extra-class\"},[a(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[a(\"code\",[t._v(\"\\nli em {\\n  color: rebeccapurple;\\n}\\n\\n\")])])]),a(\"p\",[t._v(\"该选择器将选择 li 内部的任何 em 元素（li 的后代）。因此在示例文档中，你应该发现第三个列表项内的\"),a(\"em\",[t._v(\"现在是紫色，但是在段落内的那个没发生变化。\")])])])}),[],!1,null,null,null);a.default=r.exports}}]);","extractedComments":[]}